# Generated by Django 2.0.1 on 2018-03-13 04:38

from django.db import migrations, models
import django.db.models.fields


class Migration(migrations.Migration):

    dependencies = [
        ('apptest', '0003_users_testadd'),
    ]

    operations = [
        migrations.CreateModel(
            name='LsUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('user_name', models.CharField(blank=True, max_length=11, null=True)),
                ('user_password', models.CharField(blank=True, max_length=128, null=True)),
                ('user_nikename', models.CharField(blank=True, max_length=30, null=True)),
                ('user_head_img', models.TextField(blank=True, null=True)),
                ('user_phone', models.CharField(blank=True, max_length=11, null=True)),
                ('user_sex', models.CharField(blank=True, max_length=3, null=True)),
                ('user_area', models.CharField(blank=True, max_length=10, null=True)),
                ('user_money', models.FloatField(blank=True, null=True)),
                ('user_level', models.IntegerField(blank=True, null=True)),
                ('user_last_time', models.CharField(blank=True, max_length=50, null=True)),
                ('user_create_time', models.DateTimeField()),
                ('zhifubao', models.CharField(blank=True, max_length=11, null=True)),
                ('weixin', models.CharField(blank=True, max_length=20, null=True)),
                ('store_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ls_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TAppSpread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, db_column='City', max_length=50, null=True)),
                ('telephone', models.CharField(blank=True, db_column='Telephone', max_length=12, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 't_app_spread',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TAppVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, db_column='Type', max_length=1, null=True)),
                ('version', models.CharField(blank=True, db_column='Version', max_length=20, null=True)),
                ('content', models.CharField(blank=True, db_column='Content', max_length=255, null=True)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=100, null=True)),
                ('islimit', models.CharField(blank=True, db_column='IsLimit', max_length=1, null=True)),
                ('fk_userid', models.IntegerField(blank=True, db_column='FK_UserID', null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('starttime', models.DateTimeField(db_column='StartTime')),
            ],
            options={
                'db_table': 't_app_version',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributecode', models.CharField(blank=True, db_column='AttributeCode', max_length=20, null=True)),
                ('attributename', models.CharField(blank=True, db_column='AttributeName', max_length=50, null=True)),
                ('isfilter', models.CharField(blank=True, db_column='IsFilter', max_length=1, null=True)),
                ('issallattribute', models.CharField(blank=True, db_column='IsSallAttribute', max_length=1, null=True)),
                ('iskeyattribute', models.CharField(blank=True, db_column='IsKeyAttribute', max_length=1, null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
                ('sign', models.CharField(blank=True, db_column='Sign', max_length=1, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TAttributeGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_producttypeid', models.IntegerField(blank=True, db_column='FK_ProductTypeID', null=True)),
                ('groupcode', models.CharField(blank=True, db_column='GroupCode', max_length=10, null=True)),
                ('groupname', models.CharField(blank=True, db_column='GroupName', max_length=50, null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
                ('sign', models.CharField(blank=True, db_column='Sign', max_length=1, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_attribute_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TAttributegroupsRelate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_attributegroupsid', models.IntegerField(blank=True, db_column='FK_AttributeGroupsID', null=True)),
                ('fk_attributeid', models.IntegerField(blank=True, db_column='FK_AttributeID', null=True)),
                ('isfilter', models.CharField(blank=True, db_column='IsFilter', max_length=1, null=True)),
                ('issallattribute', models.CharField(blank=True, db_column='IsSallAttribute', max_length=1, null=True)),
                ('iskeyattribute', models.CharField(blank=True, db_column='IsKeyAttribute', max_length=1, null=True)),
            ],
            options={
                'db_table': 't_attributegroups_relate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TAttributeValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_attributeid', models.IntegerField(blank=True, db_column='FK_AttributeID', null=True)),
                ('attributevaluecode', models.CharField(blank=True, db_column='AttributeValueCode', max_length=20, null=True)),
                ('attributevalue', models.CharField(blank=True, db_column='AttributeValue', max_length=200, null=True)),
                ('isinput', models.CharField(blank=True, db_column='IsInput', max_length=1, null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
                ('sign', models.CharField(blank=True, db_column='Sign', max_length=1, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_attribute_values',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TCommissionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
                ('ratio', models.FloatField(blank=True, db_column='Ratio', null=True)),
                ('sign', models.CharField(blank=True, db_column='Sign', max_length=1, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_commission_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TCreditsInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
                ('creditsruleid', models.IntegerField(blank=True, db_column='CreditsRuleID', null=True)),
                ('creditsvalue', models.IntegerField(blank=True, db_column='CreditsValue', null=True)),
                ('creditsrulecontent', models.CharField(blank=True, db_column='CreditsRuleContent', max_length=100, null=True)),
                ('creditsdatetime', models.DateTimeField(db_column='CreditsDateTime')),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_credits_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TCreditsRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rulename', models.CharField(blank=True, db_column='RuleName', max_length=100, null=True)),
                ('creditsrulecontent', models.CharField(blank=True, db_column='CreditsRuleContent', max_length=100, null=True)),
                ('creditsvalue', models.IntegerField(blank=True, db_column='CreditsValue', null=True)),
                ('createdatetime', models.DateTimeField(db_column='CreateDateTime')),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_credits_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TDiscount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discountcode', models.CharField(blank=True, db_column='DiscountCode', max_length=64, null=True)),
                ('discountname', models.CharField(blank=True, db_column='DiscountName', max_length=100, null=True)),
                ('discountintro', models.CharField(blank=True, db_column='Discountintro', max_length=255, null=True)),
                ('discountsumprice', models.FloatField(blank=True, db_column='DiscountSumPrice', null=True)),
                ('discountdecproce', models.FloatField(blank=True, db_column='DiscountDecProce', null=True)),
                ('sendmode', models.IntegerField(blank=True, db_column='SendMode', null=True)),
                ('getmode', models.IntegerField(blank=True, db_column='GetMode', null=True)),
                ('isallproduct', models.CharField(blank=True, db_column='IsAllProduct', max_length=1, null=True)),
                ('fk_productcolumnsid', models.IntegerField(blank=True, db_column='FK_ProductColumnsID', null=True)),
                ('fk_promotionsid', models.IntegerField(blank=True, db_column='FK_PromotionsID', null=True)),
                ('fk_promotionsmoduleid', models.IntegerField(blank=True, db_column='FK_PromotionsModuleID', null=True)),
                ('discountstartdatetime', models.DateTimeField(db_column='DiscountStartDateTime')),
                ('discountenddatetime', models.DateTimeField(db_column='DiscountEndDateTime')),
                ('getstartdatetime', models.DateTimeField(db_column='GetStartDateTime')),
                ('getenddatetime', models.DateTimeField(db_column='GetEndDateTime')),
                ('discountcount', models.IntegerField(blank=True, db_column='DiscountCount', null=True)),
                ('discountpageurl', models.CharField(blank=True, db_column='DiscountPageUrl', max_length=100, null=True)),
                ('fk_applyuserid', models.IntegerField(blank=True, db_column='FK_ApplyUserID', null=True)),
                ('applydatetime', models.DateTimeField(db_column='ApplyDateTime')),
                ('fk_checkuserid', models.IntegerField(blank=True, db_column='FK_CheckUserID', null=True)),
                ('checkdatetime', models.DateTimeField(db_column='CheckDateTime')),
                ('checkstatus', models.IntegerField(blank=True, db_column='CheckStatus', null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
                ('remaincount', models.IntegerField(blank=True, db_column='RemainCount', null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=1, null=True)),
            ],
            options={
                'db_table': 't_discount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TExperiencestore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storename', models.CharField(blank=True, db_column='StoreName', max_length=30, null=True)),
                ('introduction', models.TextField(blank=True, db_column='Introduction', null=True)),
                ('provice', models.CharField(blank=True, db_column='Provice', max_length=6, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=50, null=True)),
                ('longitude', models.FloatField(blank=True, db_column='Longitude', null=True)),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('linkman', models.CharField(blank=True, db_column='LinkMan', max_length=50, null=True)),
                ('linktelphone', models.CharField(blank=True, db_column='LinkTelphone', max_length=20, null=True)),
                ('images', models.CharField(blank=True, db_column='Images', max_length=255, null=True)),
                ('storecode', models.IntegerField(blank=True, db_column='StoreCode', null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=15, null=True)),
                ('type', models.IntegerField(blank=True, db_column='Type', null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=6, null=True)),
                ('area', models.CharField(blank=True, db_column='Area', max_length=6, null=True)),
                ('fk_userid', models.IntegerField(blank=True, db_column='FK_UserID', null=True)),
                ('provicename', models.CharField(blank=True, db_column='ProviceName', max_length=20, null=True)),
                ('cityname', models.CharField(blank=True, db_column='CityName', max_length=20, null=True)),
                ('accountday', models.CharField(blank=True, db_column='AccountDay', max_length=10, null=True)),
                ('areaname', models.CharField(blank=True, db_column='AreaName', max_length=20, null=True)),
                ('joiningdate', models.CharField(blank=True, db_column='JoiningDate', max_length=10, null=True)),
                ('entertime', models.DateTimeField(db_column='EnterTime')),
            ],
            options={
                'db_table': 't_experiencestore',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_userid', models.IntegerField(blank=True, db_column='Fk_Userid', null=True)),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
            ],
            options={
                'db_table': 't_feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TGifts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('giftsname', models.CharField(blank=True, db_column='GiftsName', max_length=50, null=True)),
                ('giftsintro', models.CharField(blank=True, db_column='GiftsIntro', max_length=100, null=True)),
                ('giftsproductid', models.IntegerField(blank=True, db_column='GiftsProductID', null=True)),
                ('shoppingsumprice', models.FloatField(blank=True, db_column='ShoppingSumPrice', null=True)),
                ('isallproduct', models.IntegerField(blank=True, db_column='IsAllProduct', null=True)),
                ('productcolumnsid', models.IntegerField(blank=True, db_column='ProductColumnsID', null=True)),
                ('promotionsid', models.IntegerField(blank=True, db_column='PromotionsID', null=True)),
                ('promotionsmoduleid', models.IntegerField(blank=True, db_column='PromotionsModuleID', null=True)),
                ('startdate', models.DateTimeField(db_column='StartDate')),
                ('enddate', models.DateTimeField(db_column='EndDate')),
                ('fk_applyuserid', models.IntegerField(blank=True, db_column='FK_ApplyUserID', null=True)),
                ('applydatetime', models.DateTimeField(db_column='ApplyDateTime')),
                ('checkuserid', models.IntegerField(blank=True, db_column='CheckUserID', null=True)),
                ('checkdatetime', models.DateTimeField(db_column='CheckDateTime')),
                ('checkstatus', models.IntegerField(blank=True, db_column='CheckStatus', null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_gifts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TGiftsProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_giftsid', models.IntegerField(blank=True, db_column='FK_GiftsID', null=True)),
                ('fk_productid', models.IntegerField(blank=True, db_column='FK_ProductID', null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_gifts_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TLogisticsinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_column='Code', max_length=10, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=20, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_logisticsinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TLogisticssupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_supplierid', models.IntegerField(blank=True, db_column='FK_SupplierID', null=True)),
                ('fk_logisticsinfoid', models.IntegerField(blank=True, db_column='FK_LogisticsInfoID', null=True)),
                ('linkman', models.CharField(blank=True, db_column='Linkman', max_length=20, null=True)),
                ('telephone', models.CharField(blank=True, db_column='Telephone', max_length=20, null=True)),
            ],
            options={
                'db_table': 't_logisticssupplier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='tmember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_column='Code', max_length=40, null=True)),
                ('nickname', models.CharField(blank=True, db_column='NickName', max_length=50, null=True)),
                ('headpath', models.CharField(blank=True, db_column='HeadPath', max_length=100, null=True)),
                ('telephone', models.CharField(blank=True, db_column='TelePhone', max_length=20, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=100, null=True)),
                ('phoneid', models.CharField(blank=True, db_column='PhoneID', max_length=50, null=True)),
                ('sex', models.CharField(blank=True, db_column='Sex', max_length=1, null=True)),
                ('birthday', models.CharField(blank=True, db_column='Birthday', max_length=10, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=20, null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('logintime', models.DateTimeField(db_column='LoginTime')),
                ('appchannelinfoid', models.IntegerField(blank=True, db_column='AppChannelInfoID', null=True)),
                ('credits', models.IntegerField(blank=True, db_column='Credits', null=True)),
                ('level', models.IntegerField(blank=True, db_column='Level', null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=1, null=True)),
                ('fk_experiencestoreid', models.IntegerField(blank=True, db_column='FK_ExperienceStoreID', null=True)),
                ('version', models.CharField(blank=True, db_column='Version', max_length=20, null=True)),
                ('belongtime', models.DateTimeField(db_column='BelongTime')),
                ('clientostype', models.CharField(blank=True, db_column='ClientOSType', max_length=1, null=True)),
            ],
            options={
                'db_table': 'tmember',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TMemberBrowse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_productid', models.IntegerField(blank=True, db_column='FK_ProductID', null=True)),
                ('fk_memberid', models.IntegerField(blank=True, db_column='FK_MemberID', null=True)),
                ('fk_supplierid', models.IntegerField(blank=True, db_column='FK_SupplierID', null=True)),
                ('browernumber', models.IntegerField(blank=True, db_column='BrowerNumber', null=True)),
                ('lastbrowsedatetime', models.DateTimeField(db_column='LastBrowseDateTime')),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_member_browse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TMemberCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_memberid', models.IntegerField(blank=True, db_column='FK_MemberID', null=True)),
                ('fk_productid', models.IntegerField(blank=True, db_column='FK_ProductID', null=True)),
                ('collectiondatetime', models.DateTimeField(db_column='CollectionDateTime')),
                ('collectionstatus', models.CharField(blank=True, db_column='CollectionStatus', max_length=1, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_member_collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TMemberContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_memberid', models.IntegerField(blank=True, db_column='FK_MemberID', null=True)),
                ('contactname', models.CharField(blank=True, db_column='ContactName', max_length=20, null=True)),
                ('privice', models.CharField(blank=True, db_column='Privice', max_length=20, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=20, null=True)),
                ('area', models.CharField(blank=True, db_column='Area', max_length=20, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=100, null=True)),
                ('telephone', models.CharField(blank=True, db_column='Telephone', max_length=20, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
                ('default', models.IntegerField(blank=True, db_column='Default', null=True)),
                ('provicecode', models.CharField(blank=True, db_column='ProviceCode', max_length=6, null=True)),
                ('citycode', models.CharField(blank=True, db_column='CityCode', max_length=6, null=True)),
                ('countrycode', models.CharField(blank=True, db_column='CountryCode', max_length=6, null=True)),
                ('entertime', models.DateTimeField(db_column='EnterTime')),
                ('isdel', models.CharField(blank=True, db_column='IsDel', max_length=1, null=True)),
            ],
            options={
                'db_table': 't_member_contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TMemberInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_memberid', models.IntegerField(blank=True, db_column='FK_MemberID', null=True)),
                ('fk_invoicetypeid', models.IntegerField(blank=True, db_column='FK_InvoiceTypeID', null=True)),
                ('invoicename', models.CharField(blank=True, db_column='InvoiceName', max_length=50, null=True)),
                ('fk_invoicecontentid', models.IntegerField(blank=True, db_column='FK_InvoiceContentID', null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_member_invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TMemberProductremind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_promotionsid', models.IntegerField(blank=True, db_column='FK_PromotionsID', null=True)),
                ('fk_productid', models.IntegerField(blank=True, db_column='FK_ProductID', null=True)),
                ('fk_memberid', models.IntegerField(blank=True, db_column='FK_MemberID', null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 't_member_productremind',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TMemberSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_memberid', models.IntegerField(blank=True, db_column='FK_MemberID', null=True)),
                ('searchkeyword', models.CharField(blank=True, db_column='SearchKeyword', max_length=100, null=True)),
                ('searchdatetime', models.DateTimeField(db_column='SearchDateTime')),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_member_search',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TMemberShoppingcar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_memberid', models.IntegerField(blank=True, db_column='FK_MemberID', null=True)),
                ('fk_productid', models.IntegerField(blank=True, db_column='FK_ProductID', null=True)),
                ('fk_supplierid', models.IntegerField(blank=True, db_column='FK_SupplierID', null=True)),
                ('productnumber', models.IntegerField(blank=True, db_column='ProductNumber', null=True)),
                ('createdatetime', models.DateTimeField(db_column='CreateDateTime')),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=1, null=True)),
            ],
            options={
                'db_table': 't_member_shoppingcar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TMemberWallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_member', models.IntegerField(blank=True, db_column='Fk_Member', null=True)),
                ('fk_discount', models.IntegerField(blank=True, db_column='Fk_Discount', null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('state', models.IntegerField(blank=True, db_column='State', null=True)),
            ],
            options={
                'db_table': 't_member_wallet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modulename', models.CharField(blank=True, db_column='ModuleName', max_length=100, null=True)),
                ('moduledesc', models.CharField(blank=True, db_column='ModuleDesc', max_length=255, null=True)),
                ('moduleimg', models.CharField(blank=True, db_column='ModuleImg', max_length=100, null=True)),
                ('isneedtitle', models.CharField(blank=True, db_column='IsNeedTitle', max_length=1, null=True)),
                ('isneedintro', models.CharField(blank=True, db_column='IsNeedIntro', max_length=1, null=True)),
                ('isneedlink', models.CharField(blank=True, db_column='IsNeedLink', max_length=1, null=True)),
                ('isneedcontent', models.CharField(blank=True, db_column='IsNeedContent', max_length=1, null=True)),
                ('isneedproduct', models.CharField(blank=True, db_column='IsNeedProduct', max_length=1, null=True)),
                ('isneedimage', models.CharField(blank=True, db_column='IsNeedImage', max_length=1, null=True)),
                ('modulecode', models.TextField(blank=True, db_column='ModuleCode', null=True)),
                ('remark', models.TextField(blank=True, db_column='Remark', null=True)),
            ],
            options={
                'db_table': 't_module',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TOrdersComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_memberid', models.IntegerField(blank=True, db_column='FK_MemberID', null=True)),
                ('fk_productid', models.IntegerField(blank=True, db_column='FK_ProductID', null=True)),
                ('fk_orders_infoid', models.IntegerField(blank=True, db_column='FK_Orders_InfoID', null=True)),
                ('commentcontent', models.CharField(blank=True, db_column='CommentContent', max_length=255, null=True)),
                ('commentimglist', models.CharField(blank=True, db_column='CommentImgList', max_length=255, null=True)),
                ('score', models.IntegerField(blank=True, db_column='Score', null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
                ('commenttime', models.DateTimeField(db_column='CommentTime')),
                ('state', models.CharField(blank=True, db_column='State', max_length=1, null=True)),
            ],
            options={
                'db_table': 't_orders_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TOrdersInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_orderssupplierid', models.IntegerField(blank=True, db_column='FK_OrdersSupplierID', null=True)),
                ('fk_productid', models.IntegerField(blank=True, db_column='FK_ProductID', null=True)),
                ('buynumber', models.IntegerField(blank=True, db_column='BuyNumber', null=True)),
                ('saleprice', models.FloatField(blank=True, db_column='SalePrice', null=True)),
                ('specialmoney', models.FloatField(blank=True, db_column='SpecialMoney', null=True)),
                ('totalmoney', models.FloatField(blank=True, db_column='TotalMoney', null=True)),
                ('commentstatus', models.CharField(blank=True, db_column='CommentStatus', max_length=1, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
                ('actualpaymoney', models.FloatField(blank=True, db_column='ActualPayMoney', null=True)),
                ('ratio', models.FloatField(blank=True, db_column='Ratio', null=True)),
                ('buyprice', models.FloatField(blank=True, db_column='BuyPrice', null=True)),
                ('buytotalmoney', models.FloatField(blank=True, db_column='BuyTotalMoney', null=True)),
                ('fk_commissiontypeid', models.IntegerField(blank=True, db_column='FK_CommissionTypeID', null=True)),
            ],
            options={
                'db_table': 't_orders_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TOrdersSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_orderstotalid', models.IntegerField(blank=True, db_column='FK_OrdersTotalID', null=True)),
                ('fk_supplierid', models.IntegerField(blank=True, db_column='FK_SupplierID', null=True)),
                ('ordercode', models.CharField(blank=True, db_column='OrderCode', max_length=40, null=True)),
                ('orderstatus', models.CharField(blank=True, db_column='OrderStatus', max_length=1, null=True)),
                ('couriernumber', models.CharField(blank=True, db_column='CourierNumber', max_length=20, null=True)),
                ('couriercompany', models.CharField(blank=True, db_column='CourierCompany', max_length=20, null=True)),
                ('senddatetime', models.DateTimeField(db_column='SendDateTime')),
                ('totalmoney', models.FloatField(blank=True, db_column='TotalMoney', null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
                ('couriercompanyname', models.CharField(blank=True, db_column='CourierCompanyName', max_length=20, null=True)),
                ('acceptdatetime', models.DateTimeField(db_column='AcceptDateTime')),
                ('fk_sendsupplierid', models.IntegerField(blank=True, db_column='Fk_SendSupplierID', null=True)),
                ('acceptway', models.CharField(blank=True, db_column='AcceptWay', max_length=1, null=True)),
                ('specialmoney', models.FloatField(blank=True, db_column='SpecialMoney', null=True)),
                ('buytotalmoney', models.FloatField(blank=True, db_column='BuyTotalMoney', null=True)),
                ('actualpaymoney', models.FloatField(blank=True, db_column='ActualPayMoney', null=True)),
            ],
            options={
                'db_table': 't_orders_supplier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TOrdersTotal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_memberid', models.IntegerField(blank=True, db_column='FK_MemberID', null=True)),
                ('ordercode', models.CharField(blank=True, db_column='OrderCode', max_length=40, null=True)),
                ('ordertotalmoney', models.FloatField(blank=True, db_column='OrderTotalMoney', null=True)),
                ('fk_walletid', models.IntegerField(blank=True, db_column='FK_WalletID', null=True)),
                ('ordertime', models.DateTimeField(db_column='OrderTime')),
                ('paytype', models.CharField(blank=True, db_column='PayType', max_length=1, null=True)),
                ('paystate', models.CharField(blank=True, db_column='PayState', max_length=1, null=True)),
                ('payovertime', models.DateTimeField(db_column='PayOverTime')),
                ('contactname', models.CharField(blank=True, db_column='ContactName', max_length=20, null=True)),
                ('private', models.CharField(blank=True, db_column='Private', max_length=20, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=20, null=True)),
                ('area', models.CharField(blank=True, db_column='Area', max_length=20, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=50, null=True)),
                ('telephone', models.CharField(blank=True, db_column='Telephone', max_length=20, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=20, null=True)),
                ('invoicetype', models.CharField(blank=True, db_column='InvoiceType', max_length=10, null=True)),
                ('invoicename', models.CharField(blank=True, db_column='InvoiceName', max_length=50, null=True)),
                ('invoicecontent', models.CharField(blank=True, db_column='InvoiceContent', max_length=20, null=True)),
                ('isneed', models.CharField(blank=True, db_column='IsNeed', max_length=1, null=True)),
                ('payordercode', models.CharField(blank=True, db_column='PayOrderCode', max_length=32, null=True)),
                ('mchid', models.CharField(blank=True, db_column='MchID', max_length=32, null=True)),
                ('openid', models.CharField(blank=True, db_column='OpenID', max_length=128, null=True)),
                ('deviceinfo', models.CharField(blank=True, db_column='DeviceInfo', max_length=40, null=True)),
                ('totalmoney', models.FloatField(blank=True, db_column='TotalMoney', null=True)),
                ('buytotalmoney', models.FloatField(blank=True, db_column='BuyTotalMoney', null=True)),
                ('specialmoney', models.FloatField(blank=True, db_column='SpecialMoney', null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_orders_total',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_supplierid', models.IntegerField(blank=True, db_column='FK_SupplierID', null=True)),
                ('fk_producttypebrandid', models.IntegerField(blank=True, db_column='FK_ProductTypeBrandID', null=True)),
                ('productcode', models.CharField(blank=True, db_column='ProductCode', max_length=20, null=True)),
                ('productname', models.CharField(blank=True, db_column='ProductName', max_length=100, null=True)),
                ('productdesc', models.CharField(blank=True, db_column='ProductDesc', max_length=255, null=True)),
                ('tagids', models.CharField(blank=True, db_column='TagIDs', max_length=100, null=True)),
                ('saleprice', models.FloatField(blank=True, db_column='SalePrice', null=True)),
                ('buyprice', models.FloatField(blank=True, db_column='BuyPrice', null=True)),
                ('currentsaleprice', models.FloatField(blank=True, db_column='CurrentSalePrice', null=True)),
                ('stocknumber', models.IntegerField(blank=True, db_column='StockNumber', null=True)),
                ('stockguardnumber', models.IntegerField(blank=True, db_column='StockGuardNumber', null=True)),
                ('salenumber', models.IntegerField(blank=True, db_column='SaleNumber', null=True)),
                ('graphicdetails', models.TextField(blank=True, db_column='GraphicDetails', null=True)),
                ('graphicdetailspath', models.CharField(blank=True, db_column='GraphicDetailsPath', max_length=100, null=True)),
                ('formatdetails', models.TextField(blank=True, db_column='FormatDetails', null=True)),
                ('service', models.TextField(blank=True, db_column='Service', null=True)),
                ('browsenumber', models.IntegerField(blank=True, db_column='BrowseNumber', null=True)),
                ('collectionnumber', models.IntegerField(blank=True, db_column='CollectionNumber', null=True)),
                ('enteruserid', models.IntegerField(blank=True, db_column='EnterUserID', null=True)),
                ('entertime', models.DateTimeField(db_column='EnterTime')),
                ('updateuserid', models.IntegerField(blank=True, db_column='UpdateUserID', null=True)),
                ('updatetime', models.DateTimeField(db_column='UpdateTime')),
                ('auditinguserid', models.IntegerField(blank=True, db_column='AuditingUserID', null=True)),
                ('auditingdesc', models.CharField(blank=True, db_column='AuditingDesc', max_length=100, null=True)),
                ('auditingtime', models.DateTimeField(db_column='AuditingTime')),
                ('putawaytime', models.DateTimeField(db_column='PutawayTime')),
                ('outawaytime', models.DateTimeField(db_column='OutawayTime')),
                ('status', models.CharField(blank=True, db_column='Status', max_length=1, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
                ('fk_commissiontypeid', models.IntegerField(blank=True, db_column='FK_CommissionTypeID', null=True)),
            ],
            options={
                'db_table': 't_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TProductApplyprice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_productid', models.IntegerField(blank=True, db_column='FK_ProductID', null=True)),
                ('fk_commissiontypeid', models.IntegerField(blank=True, db_column='FK_CommissionTypeID', null=True)),
                ('currentsaleprice', models.FloatField(blank=True, db_column='CurrentSalePrice', null=True)),
                ('currentbuyprice', models.FloatField(blank=True, db_column='CurrentBuyPrice', null=True)),
                ('applysaleprice', models.FloatField(blank=True, db_column='ApplySalePrice', null=True)),
                ('applybuyprice', models.FloatField(blank=True, db_column='ApplyBuyPrice', null=True)),
                ('applystarttime', models.DateTimeField(db_column='ApplyStartTime')),
                ('applyendtime', models.DateTimeField(db_column='ApplyEndTime')),
                ('applyuserid', models.IntegerField(blank=True, db_column='ApplyUserID', null=True)),
                ('applydatetime', models.DateTimeField(db_column='ApplyDateTime')),
                ('updateuserid', models.IntegerField(blank=True, db_column='UpdateUserID', null=True)),
                ('updatetime', models.DateTimeField(db_column='UpdateTime')),
                ('auditinguserid', models.IntegerField(blank=True, db_column='AuditingUserID', null=True)),
                ('auditingdesc', models.CharField(blank=True, db_column='AuditingDesc', max_length=100, null=True)),
                ('auditingtime', models.DateTimeField(db_column='AuditingTime')),
                ('status', models.CharField(blank=True, db_column='Status', max_length=1, null=True)),
                ('isupdate', models.CharField(blank=True, db_column='IsUpdate', max_length=1, null=True)),
                ('isreturn', models.CharField(blank=True, db_column='IsReturn', max_length=1, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_product_applyprice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TProductAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_productid', models.IntegerField(blank=True, db_column='FK_ProductID', null=True)),
                ('fk_attributegroupsrelateid', models.IntegerField(blank=True, db_column='FK_AttributeGroupsRelateID', null=True)),
                ('attributevaluesid', models.IntegerField(blank=True, db_column='AttributeValuesID', null=True)),
                ('othervalue', models.CharField(blank=True, db_column='OtherValue', max_length=200, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_product_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TProductBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brandcode', models.CharField(blank=True, db_column='BrandCode', max_length=10, null=True)),
                ('brandname', models.CharField(blank=True, db_column='BrandName', max_length=20, null=True)),
                ('sign', models.CharField(blank=True, db_column='Sign', max_length=1, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_product_brand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TProductImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_productid', models.IntegerField(blank=True, db_column='FK_ProductID', null=True)),
                ('path', models.CharField(blank=True, db_column='Path', max_length=200, null=True)),
                ('ismain', models.CharField(blank=True, db_column='IsMain', max_length=1, null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
            ],
            options={
                'db_table': 't_product_images',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TProductSku',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skucode', models.CharField(blank=True, db_column='SKUCode', max_length=40, null=True)),
                ('fk_productid', models.IntegerField(blank=True, db_column='FK_ProductID', null=True)),
                ('fk_attributeid', models.IntegerField(blank=True, db_column='FK_AttributeID', null=True)),
                ('attributevalue', models.CharField(blank=True, db_column='AttributeValue', max_length=50, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_product_sku',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TProductTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_productid', models.IntegerField(blank=True, db_column='FK_ProductID', null=True)),
                ('fk_tagid', models.IntegerField(blank=True, db_column='FK_TagID', null=True)),
            ],
            options={
                'db_table': 't_product_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TProductType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fatherid', models.IntegerField(blank=True, db_column='FatherID', null=True)),
                ('code', models.CharField(blank=True, db_column='Code', max_length=20, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('imagename', models.CharField(blank=True, db_column='ImageName', max_length=50, null=True)),
                ('pricerange', models.CharField(blank=True, db_column='PriceRange', max_length=50, null=True)),
                ('grade', models.IntegerField(blank=True, db_column='Grade', null=True)),
                ('ischildren', models.CharField(blank=True, db_column='isChildren', max_length=1, null=True)),
                ('path', models.CharField(blank=True, db_column='Path', max_length=100, null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
                ('sign', models.CharField(blank=True, db_column='Sign', max_length=1, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_product_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TProductTypebrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_producttypeid', models.IntegerField(blank=True, db_column='FK_ProductTypeID', null=True)),
                ('fk_productbrandid', models.IntegerField(blank=True, db_column='FK_ProductBrandID', null=True)),
            ],
            options={
                'db_table': 't_product_typebrand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TPromotions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promotionsname', models.CharField(blank=True, db_column='PromotionsName', max_length=100, null=True)),
                ('promotionsdesc', models.CharField(blank=True, db_column='PromotionsDesc', max_length=255, null=True)),
                ('promotionsimg', models.CharField(blank=True, db_column='PromotionsImg', max_length=100, null=True)),
                ('promotionsbgcolor', models.CharField(blank=True, db_column='PromotionsBgColor', max_length=10, null=True)),
                ('promotionsbgimage', models.CharField(blank=True, db_column='PromotionsBgImage', max_length=100, null=True)),
                ('promotionsstartdatetime', models.DateTimeField(db_column='PromotionsStartDateTime')),
                ('promotionsenddatetime', models.DateTimeField(db_column='PromotionsEndDateTime')),
                ('fk_applyuserid', models.IntegerField(blank=True, db_column='FK_ApplyUserID', null=True)),
                ('applydatetime', models.DateTimeField(db_column='ApplyDateTime')),
                ('checkuserid', models.IntegerField(blank=True, db_column='CheckUserID', null=True)),
                ('checkdatetime', models.DateTimeField(db_column='CheckDateTime')),
                ('promotionsstatus', models.IntegerField(blank=True, db_column='PromotionsStatus', null=True)),
                ('promotionspageurl', models.CharField(blank=True, db_column='PromotionsPageUrl', max_length=100, null=True)),
                ('promotionscode', models.TextField(blank=True, db_column='PromotionsCode', null=True)),
                ('promotionsqrcode', models.CharField(blank=True, db_column='PromotionsQRCode', max_length=100, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
                ('state', models.IntegerField(blank=True, db_column='State', null=True)),
            ],
            options={
                'db_table': 't_promotions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TPromotionsModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_promotionsid', models.IntegerField(blank=True, db_column='FK_PromotionsID', null=True)),
                ('fk_moduleid', models.IntegerField(blank=True, db_column='FK_ModuleID', null=True)),
                ('pmodulename', models.CharField(blank=True, db_column='PModuleName', max_length=100, null=True)),
                ('pmodulesort', models.IntegerField(blank=True, db_column='PModuleSort', null=True)),
                ('pmodulecode', models.TextField(blank=True, db_column='PModuleCode', null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_promotions_module',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TPromotionsNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_pmoduleid', models.IntegerField(blank=True, db_column='FK_PModuleID', null=True)),
                ('promotionstilte', models.CharField(blank=True, db_column='PromotionsTilte', max_length=100, null=True)),
                ('promotionsintro', models.CharField(blank=True, db_column='PromotionsIntro', max_length=255, null=True)),
                ('promotionslink', models.CharField(blank=True, db_column='PromotionsLink', max_length=100, null=True)),
                ('promotionscontent', models.TextField(blank=True, db_column='PromotionsContent', null=True)),
                ('promotionsimage', models.CharField(blank=True, db_column='PromotionsImage', max_length=100, null=True)),
                ('promotionsproductid', models.IntegerField(blank=True, db_column='PromotionsProductID', null=True)),
                ('promotionssort', models.IntegerField(blank=True, db_column='PromotionsSort', null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_promotions_news',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_suppliertypeid', models.IntegerField(blank=True, db_column='FK_SupplierTypeID', null=True)),
                ('suppliername', models.CharField(blank=True, db_column='SupplierName', max_length=50, null=True)),
                ('keyword', models.CharField(blank=True, db_column='KeyWord', max_length=200, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=1, null=True)),
                ('private', models.CharField(blank=True, db_column='Private', max_length=20, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=20, null=True)),
                ('area', models.CharField(blank=True, db_column='Area', max_length=20, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=50, null=True)),
                ('linkman', models.CharField(blank=True, db_column='Linkman', max_length=20, null=True)),
                ('telephone', models.CharField(blank=True, db_column='Telephone', max_length=20, null=True)),
                ('bank', models.CharField(blank=True, db_column='Bank', max_length=50, null=True)),
                ('bankid', models.CharField(blank=True, db_column='BankID', max_length=20, null=True)),
                ('bankcard', models.CharField(blank=True, db_column='BankCard', max_length=30, null=True)),
                ('bankaddress', models.CharField(blank=True, db_column='BankAddress', max_length=50, null=True)),
                ('entertime', models.CharField(blank=True, db_column='EnterTime', max_length=10, null=True)),
                ('endtime', models.CharField(blank=True, db_column='EndTime', max_length=10, null=True)),
                ('fk_userid', models.IntegerField(blank=True, db_column='FK_UserID', null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_supplier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSupplierType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=40, null=True)),
                ('receipttype', models.CharField(blank=True, db_column='ReceiptType', max_length=20, null=True)),
                ('taxratio', models.FloatField(blank=True, db_column='TaxRatio', null=True)),
            ],
            options={
                'db_table': 't_supplier_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysAppchannelinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_column='Code', max_length=100, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('sign', models.CharField(blank=True, db_column='Sign', max_length=1, null=True)),
            ],
            options={
                'db_table': 't_sys_appchannelinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysAuth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appid', models.CharField(blank=True, db_column='AppID', max_length=40, null=True)),
                ('platname', models.CharField(blank=True, db_column='PlatName', max_length=10, null=True)),
                ('publickey', models.CharField(blank=True, db_column='PublicKey', max_length=255, null=True)),
                ('privatekey', models.CharField(blank=True, db_column='PrivateKey', max_length=255, null=True)),
            ],
            options={
                'db_table': 't_sys_auth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_column='Code', max_length=6, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
                ('provicecode', models.CharField(blank=True, db_column='ProviceCode', max_length=6, null=True)),
            ],
            options={
                'db_table': 't_sys_city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysClientserviceRelate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_serviceinfoid', models.IntegerField(blank=True, db_column='FK_ServiceInfoID', null=True)),
                ('fk_clientversionid', models.IntegerField(blank=True, db_column='FK_ClientVersionID', null=True)),
            ],
            options={
                'db_table': 't_sys_clientservice_relate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysClientversion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_userid', models.IntegerField(blank=True, db_column='FK_UserID', null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=1, null=True)),
                ('version', models.CharField(blank=True, db_column='Version', max_length=20, null=True)),
                ('content', models.CharField(blank=True, db_column='Content', max_length=255, null=True)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=100, null=True)),
                ('islimit', models.CharField(blank=True, db_column='IsLimit', max_length=1, null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('starttime', models.DateTimeField(db_column='StartTime')),
            ],
            options={
                'db_table': 't_sys_clientversion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_column='Code', max_length=6, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
                ('fk_citycode', models.CharField(blank=True, db_column='FK_CityCode', max_length=6, null=True)),
            ],
            options={
                'db_table': 't_sys_country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_column='Code', max_length=40, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
                ('departmenthead', models.CharField(blank=True, db_column='DepartmentHead', max_length=20, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_sys_department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysInvoicecomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoicecomment', models.CharField(blank=True, db_column='InvoiceComment', max_length=30, null=True)),
                ('suppliertype', models.IntegerField(blank=True, db_column='SupplierType', null=True)),
            ],
            options={
                'db_table': 't_sys_invoicecomment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysInvoicetype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoicetype', models.CharField(blank=True, db_column='InvoiceType', max_length=20, null=True)),
                ('suppliertype', models.IntegerField(blank=True, db_column='SupplierType', null=True)),
            ],
            options={
                'db_table': 't_sys_invoicetype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_column='Code', max_length=40, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
                ('icons', models.CharField(blank=True, max_length=40, null=True)),
                ('path', models.CharField(blank=True, db_column='Path', max_length=100, null=True)),
                ('fatherid', models.IntegerField(blank=True, db_column='FatherID', null=True)),
                ('grade', models.IntegerField(blank=True, db_column='Grade', null=True)),
                ('ischildren', models.CharField(blank=True, db_column='isChildren', max_length=1, null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=1, null=True)),
                ('sign', models.CharField(blank=True, db_column='Sign', max_length=1, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_sys_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysMsg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_msgtypeid', models.IntegerField(blank=True, db_column='FK_MsgTypeID', null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=40, null=True)),
                ('content', models.CharField(blank=True, db_column='Content', max_length=200, null=True)),
                ('iconspath', models.CharField(blank=True, db_column='IconsPath', max_length=100, null=True)),
                ('msgurl', models.CharField(blank=True, db_column='MsgUrl', max_length=100, null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('issend', models.CharField(blank=True, db_column='IsSend', max_length=1, null=True)),
                ('sendtime', models.DateTimeField(db_column='SendTime')),
                ('isnew', models.CharField(blank=True, db_column='IsNew', max_length=1, null=True)),
                ('islook', models.CharField(blank=True, db_column='IsLook', max_length=1, null=True)),
                ('tags', models.CharField(blank=True, db_column='Tags', max_length=40, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=1, null=True)),
            ],
            options={
                'db_table': 't_sys_msg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysMsgmycapital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_msgtypeid', models.IntegerField(blank=True, db_column='FK_MsgTypeID', null=True)),
                ('mycapitaltype', models.CharField(blank=True, db_column='MyCapitalType', max_length=1, null=True)),
                ('fk_walletid', models.IntegerField(blank=True, db_column='FK_WalletID', null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=40, null=True)),
                ('content', models.CharField(blank=True, db_column='Content', max_length=200, null=True)),
                ('iconspath', models.CharField(blank=True, db_column='IconsPath', max_length=100, null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('issend', models.CharField(blank=True, db_column='IsSend', max_length=1, null=True)),
                ('sendtime', models.DateTimeField(db_column='SendTime')),
                ('isnew', models.CharField(blank=True, db_column='IsNew', max_length=1, null=True)),
                ('islook', models.CharField(blank=True, db_column='IsLook', max_length=1, null=True)),
            ],
            options={
                'db_table': 't_sys_msgmycapital',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysMsgorder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_msgtypeid', models.IntegerField(blank=True, db_column='FK_MsgTypeID', null=True)),
                ('fk_orderssupplierid', models.IntegerField(blank=True, db_column='FK_OrdersSupplierID', null=True)),
                ('fk_msgordernodeid', models.IntegerField(blank=True, db_column='FK_MsgOrderNodeID', null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=40, null=True)),
                ('content', models.CharField(blank=True, db_column='Content', max_length=200, null=True)),
                ('iconspath', models.CharField(blank=True, db_column='IconsPath', max_length=100, null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('issend', models.CharField(blank=True, db_column='IsSend', max_length=1, null=True)),
                ('sendtime', models.DateTimeField(db_column='SendTime')),
                ('isnew', models.CharField(blank=True, db_column='IsNew', max_length=1, null=True)),
                ('islook', models.CharField(blank=True, db_column='IsLook', max_length=1, null=True)),
            ],
            options={
                'db_table': 't_sys_msgorder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysMsgordernode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nodename', models.CharField(blank=True, db_column='NodeName', max_length=20, null=True)),
                ('orderstatus', models.CharField(blank=True, db_column='OrderStatus', max_length=1, null=True)),
                ('sign', models.CharField(blank=True, db_column='Sign', max_length=1, null=True)),
            ],
            options={
                'db_table': 't_sys_msgordernode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysMsgproductremind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_msgtypeid', models.IntegerField(blank=True, db_column='FK_MsgTypeID', null=True)),
                ('fk_memberproductremindid', models.IntegerField(blank=True, db_column='FK_MemberProductRemindID', null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=40, null=True)),
                ('content', models.CharField(blank=True, db_column='Content', max_length=200, null=True)),
                ('iconspath', models.CharField(blank=True, db_column='IconsPath', max_length=100, null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('issend', models.CharField(blank=True, db_column='IsSend', max_length=1, null=True)),
                ('sendtime', models.DateTimeField(db_column='SendTime')),
                ('isnew', models.CharField(blank=True, db_column='IsNew', max_length=1, null=True)),
                ('islook', models.CharField(blank=True, db_column='IsLook', max_length=1, null=True)),
            ],
            options={
                'db_table': 't_sys_msgproductremind',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysMsgpromotions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_msgtypeid', models.IntegerField(blank=True, db_column='FK_MsgTypeID', null=True)),
                ('fk_promotionsid', models.IntegerField(blank=True, db_column='FK_PromotionsID', null=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=40, null=True)),
                ('content', models.CharField(blank=True, db_column='Content', max_length=200, null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('issend', models.CharField(blank=True, db_column='IsSend', max_length=1, null=True)),
                ('sendtime', models.DateTimeField(db_column='SendTime')),
                ('isnew', models.CharField(blank=True, db_column='IsNew', max_length=1, null=True)),
                ('islook', models.CharField(blank=True, db_column='IsLook', max_length=1, null=True)),
                ('tags', models.CharField(blank=True, db_column='Tags', max_length=40, null=True)),
            ],
            options={
                'db_table': 't_sys_msgpromotions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysMsgtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sendway', models.CharField(blank=True, db_column='SendWay', max_length=1, null=True)),
                ('claasifyname', models.CharField(blank=True, db_column='ClaasifyName', max_length=20, null=True)),
                ('iconspath', models.CharField(blank=True, db_column='IconsPath', max_length=100, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
                ('version', models.CharField(blank=True, db_column='Version', max_length=20, null=True)),
            ],
            options={
                'db_table': 't_sys_msgtype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysMsgusersetup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_msgtypeid', models.IntegerField(blank=True, db_column='FK_MsgTypeID', null=True)),
                ('fk_memberid', models.IntegerField(blank=True, db_column='FK_MemberID', null=True)),
                ('sign', models.CharField(blank=True, db_column='Sign', max_length=1, null=True)),
                ('starttime', models.CharField(blank=True, db_column='StartTime', max_length=10, null=True)),
                ('endtime', models.CharField(blank=True, db_column='EndTime', max_length=10, null=True)),
            ],
            options={
                'db_table': 't_sys_msgusersetup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysProvice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, db_column='Code', max_length=6, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
            ],
            options={
                'db_table': 't_sys_provice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_departmentid', models.IntegerField(blank=True, db_column='FK_DepartmentID', null=True)),
                ('code', models.CharField(blank=True, db_column='Code', max_length=40, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_sys_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysRolepower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_roleid', models.IntegerField(blank=True, db_column='FK_RoleID', null=True)),
                ('fk_menuid', models.IntegerField(blank=True, db_column='FK_MenuID', null=True)),
            ],
            options={
                'db_table': 't_sys_rolepower',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysServiceinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicecode', models.CharField(blank=True, db_column='ServiceCode', max_length=20, null=True)),
                ('servicename', models.CharField(blank=True, db_column='ServiceName', max_length=50, null=True)),
                ('serviceurl', models.CharField(blank=True, db_column='ServiceUrl', max_length=100, null=True)),
                ('classname', models.CharField(blank=True, db_column='ClassName', max_length=50, null=True)),
                ('actionname', models.CharField(blank=True, db_column='ActionName', max_length=50, null=True)),
                ('issign', models.CharField(blank=True, db_column='IsSign', max_length=1, null=True)),
                ('noparams', models.CharField(blank=True, db_column='NoParams', max_length=200, null=True)),
                ('servicecontent', models.CharField(blank=True, db_column='ServiceContent', max_length=100, null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('starttime', models.DateTimeField(db_column='StartTime')),
                ('sign', models.CharField(blank=True, db_column='Sign', max_length=1, null=True)),
            ],
            options={
                'db_table': 't_sys_serviceinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_roleid', models.IntegerField(blank=True, db_column='FK_RoleID', null=True)),
                ('code', models.CharField(blank=True, db_column='Code', max_length=40, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=40, null=True)),
                ('password', models.CharField(blank=True, db_column='PassWord', max_length=40, null=True)),
                ('truename', models.CharField(blank=True, db_column='TrueName', max_length=40, null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
            ],
            options={
                'db_table': 't_sys_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TSysUserpower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_userid', models.IntegerField(blank=True, db_column='FK_UserID', null=True)),
                ('fk_menuid', models.IntegerField(blank=True, db_column='FK_MenuID', null=True)),
            ],
            options={
                'db_table': 't_sys_userpower',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tagcode', models.CharField(blank=True, db_column='TagCode', max_length=10, null=True)),
                ('tagname', models.CharField(blank=True, db_column='TagName', max_length=50, null=True)),
                ('productnumber', models.IntegerField(blank=True, db_column='ProductNumber', null=True)),
                ('sign', models.CharField(blank=True, db_column='Sign', max_length=1, null=True)),
                ('ishot', models.CharField(blank=True, db_column='IsHot', max_length=1, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=100, null=True)),
            ],
            options={
                'db_table': 't_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TFirstpageProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk_type', models.IntegerField(blank=True, db_column='FK_Type', null=True)),
                ('img', models.CharField(blank=True, db_column='Img', max_length=100, null=True)),
                ('head', models.CharField(blank=True, db_column='Head', max_length=100, null=True)),
                ('descs', models.CharField(blank=True, db_column='Descs', max_length=255, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=1, null=True)),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('url', models.CharField(blank=True, db_column='Url', max_length=100, null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
                ('product_saleprice', models.FloatField(blank=True, db_column='Product_SalePrice', null=True)),
            ],
            options={
                'db_table': 't_firstpage_product',
                'ordering': ['sort'],
            },
        ),
        migrations.CreateModel(
            name='TFirstpageProducttype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typecode', models.IntegerField(blank=True, db_column='TypeCode', null=True)),
                ('typename', models.CharField(blank=True, db_column='TypeName', max_length=20, null=True)),
                ('endtime', models.DateTimeField(db_column='EndTime')),
                ('createtime', models.DateTimeField(db_column='CreateTime')),
                ('state', models.IntegerField(blank=True, db_column='State', null=True)),
                ('num', models.IntegerField(blank=True, db_column='Num', null=True)),
                ('version', models.CharField(blank=True, db_column='Version', max_length=20, null=True)),
                ('sort', models.IntegerField(blank=True, db_column='Sort', null=True)),
            ],
            options={
                'db_table': 't_firstpage_producttype',
                'ordering': ['sort'],
            },
        ),
        migrations.DeleteModel(
            name='Dreamreal',
        ),
        migrations.DeleteModel(
            name='Users',
        ),
        migrations.AddField(
            model_name='tfirstpageproduct',
            name='fk_product',
            field=models.ForeignKey(on_delete=django.db.models.fields.BooleanField, to='apptest.TFirstpageProducttype'),
        ),
    ]
